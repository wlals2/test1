<<<<<<< HEAD
prometheus:
  enabled: true
  nodePort: 30900
  image:
    repository: prom/prometheus     # 공식 이미지
    tag: "v2.52.0"
  storage: 1Gi
  config: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'mysqld-exporter'
        static_configs:
          - targets: ['mysqld-exporter:9104']
      - job_name: 'node-exporter'
        static_configs:
          - targets: ['node-exporter:9100']
      - job_name: 'nginx-exporter'
        static_configs:
          - targets: ['nginx-exporter:9113']

grafana:
  enabled: true
  nodePort: 30300
  image:
    repository: grafana/grafana    # 공식 이미지
    tag: "10.2.0"
  storage: 1Gi

mysql:
  enabled: true
  nodePort: 30366
  image:
    repository: mysql             # 공식 이미지
    tag: "8.0"
  rootPassword: "supersecret"
  database: "mydb"
  storage: 2Gi

nodeexporter:
  enabled: true
  nodePort: 31000
  image:
    repository: prom/node-exporter # 공식 이미지
    tag: "v1.8.1"

nginxexporter:
  enabled: true
  nodePort: 31113
  image:
    repository: nginx/nginx-prometheus-exporter
    tag: "1.1.0"
  nginxScrapeUri: "http://nginx:80/stub_status"

=======
elasticsearch:
  enabled: true
  storage: 2Gi
  nodePort: 31200

prometheus:
  enabled: true
  storage: 1Gi
  nodePort: 30900

grafana:
  enabled: true
  storage: 1Gi
  nodePort: 30300

jenkins:
  enabled: true
  storage: 2Gi
  nodePort: 30800
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113

nginx:
  enabled: true
  nodePort: 30888
<<<<<<< HEAD
  image:
    repository: nginx
    tag: "1.27"
=======
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113
  config: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
<<<<<<< HEAD
    events {
      worker_connections 1024;
    }
=======
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      sendfile        on;
      keepalive_timeout  65;
      server {
        listen       80;
        server_name  localhost;
        location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
        }
<<<<<<< HEAD
        location /stub_status{
          stub_status;
          allow all;
          access_log off;
        }
      }
    }
  storage: 1Gi
=======
      }
    }
  storage: 5Gi

>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113

apache2:
  enabled: true
  nodePort: 30880
<<<<<<< HEAD
  image:
    repository: httpd          # 공식 이미지
    tag: "2.4"
  config: |
    ServerRoot "/usr/local/apache2"
    Listen 80
    LoadModule mpm_event_module modules/mod_mpm_event.so
    LoadModule unixd_module modules/mod_unixd.so
    LoadModule authz_core_module modules/mod_authz_core.so
    LoadModule authz_host_module modules/mod_authz_host.so
    ServerName localhost
    DocumentRoot "/usr/local/apache2/htdocs"
    <Directory "/usr/local/apache2/htdocs">
        Require all granted
    </Directory>
    ErrorLog /proc/self/fd/2
    LogLevel warn
=======
  config: |
    # Apache2 기본 설정
    ServerRoot "/etc/apache2"
    Listen 80
    IncludeOptional mods-enabled/*.load
    IncludeOptional mods-enabled/*.conf
    IncludeOptional conf-enabled/*.conf
    IncludeOptional sites-enabled/*.conf
    LogLevel warn
  storage: 1Gi

>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113

ftp:
  enabled: true
  nodePort: 30210
<<<<<<< HEAD
  image:
    repository: fauria/vsftpd      # 공식 이미지 활용
    tag: "latest"
=======
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113
  pasvPorts: [21100, 21101, 21102]
  config: |
    listen=YES
    anonymous_enable=NO
    local_enable=YES
    write_enable=YES
    pasv_enable=YES
    pasv_min_port=21100
    pasv_max_port=21102
<<<<<<< HEAD
=======
    # 기타 vsftpd 설정
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113
  storage: 1Gi

samba:
  enabled: true
  nodePorts: [30139, 30445]
<<<<<<< HEAD
  image:
    repository: dperson/samba
    tag: "latest"
  hostPath: /srv/samba-share
  storage: 1Gi
=======
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113
  config: |
    [share]
    path = /share
    read only = no
    browsable = yes
    guest ok = yes
<<<<<<< HEAD
=======
  storage: 1Gi
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113

rsnapbackup:
  enabled: true
  schedule: "0 2 * * *"
<<<<<<< HEAD
  image:
    repository: ghcr.io/rsnapshot/rsnapshot
    tag: "latest"
  config: |
=======
  config: |
    # rsnapshot.conf 예시 내용
>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113
    snapshot_root   /backup/
    backup  /data/  localhost/
  storage: 1Gi

<<<<<<< HEAD
mysqldexporter:
  enabled: true
  nodePort: 31004
  image:
    repository: prom/mysqld-exporter
    tag: "v0.15.1"

openvpn:
  enabled: true
  nodePort: 31194
  image:
    repository: kylemanna/openvpn
    tag: "latest"
  server_ip: 192.168.56.103
  env:
    - name: EASYRSA_BATCH
      value: "1"
  config: |
    port 1194
    proto udp
    dev tun
  storage: 1Gi
=======
fluentbit:
  enabled: true
  config: |
    [SERVICE]
        Flush        1
        Log_Level    info
    [INPUT]
        Name  tail
        Path  /var/log/nginx/*.log
    [OUTPUT]
        Name  stdout
  storage: 1Gi

openvpn:
  enabled: true
  nodePort: 31194
  config: |
    # server.conf 예시
    port 1194
    proto udp
    dev tun
    # ...
  storage: 1Gi

mysqldexporter:
  enabled: true
  nodePort: 31004
  config: |
    # exporter 옵션들 필요시 기록

logstash:
  enabled: true
  nodePort: 30544
  config: |
    input {
      beats { port => 5044 }
    }
    output {
      elasticsearch { hosts => ["http://elasticsearch:9200"] }
    }

kibana:
  enabled: true
  nodeport: 35601








>>>>>>> 0d047fc19ce650f73a7d779b5cf966d44f33f113



